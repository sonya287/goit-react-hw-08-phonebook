{"version":3,"sources":["redux/store.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","routes.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.scss","components/AuthNav/AuthNav.module.scss","components/UserMenu/UserMenu.module.scss","components/AppBar/AppBar.module.scss","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-reducer.js","components/Loader/Spinner.js","components/Loader/Spinner.module.scss","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","storeObj","persistor","persistStore","connect","state","isAuthenticated","getIsAuthenticated","to","exact","className","link","activeClassName","activeLink","AuthNav","mapDispatchToProps","onLogout","logOut","email","getUserEmail","avatar","src","alt","width","user","button","type","onClick","classes","headerContainer","header","routes","home","contacts","register","login","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsViews","RegisterView","LoginView","App","this","refreshUser","fallback","path","getCurrentUser","ReactDOM","StrictMode","loading","document","getElementById","module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contact_filter","operations","addContact","name","number","dispatch","contact","axios","post","then","data","catch","error","message","deleteContact","id","delete","fetchContacts","get","getFilter","filter","getContacts","getLoading","getError","getFilteredContacts","createSelector","normalizeFilter","toLowerCase","includes","createReducer","_","payload","combineReducers","Spinner","spinner","color","height","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","token","serError","isLoadIn","defaults","headers","common","Authorization","baseURL","userObj","a","response","logIn","getState","userToken"],"mappings":"mPAeMA,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,QACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,KACxCC,UAAWC,KAEbrB,aACAsB,UAAUC,IAUGC,EALE,CACfV,QACAW,UAJgBC,YAAaZ,I,2FCXhBa,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,YAAmBF,MAGvBD,EAtBI,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAH,OACjB,gCACE,cAAC,IAAD,CAASE,GAAG,IAAIC,OAAK,EAACC,UAAWC,OAAMC,gBAAiBC,aAAxD,wDAGCP,GACC,cAAC,IAAD,CACEE,GAAG,YACHC,OAAK,EACLC,UAAWC,OACXC,gBAAiBC,aAJnB,oE,QCGSC,EAXC,kBACd,gCACE,cAAC,IAAD,CAASN,GAAG,YAAYC,OAAK,EAACC,UAAWC,OAAMC,gBAAiBC,aAAhE,gFAGA,cAAC,IAAD,CAASL,GAAG,SAASC,OAAK,EAACC,UAAWC,OAAMC,gBAAiBC,aAA7D,gD,QCaEE,EAAqB,CACzBC,SAAUC,KAGGb,eARS,SAAAC,GAAK,MAAK,CAChCa,MAAOC,YAAad,MAOkBU,EAAzBX,EApBE,SAAC,GAAD,IAAGgB,EAAH,EAAGA,OAAQF,EAAX,EAAWA,MAAOF,EAAlB,EAAkBA,SAAlB,OACf,gCACE,qBAAKK,IAAKD,EAAQE,IAAI,GAAGC,MAAM,OAC/B,6CACW,sBAAMb,UAAWc,OAAjB,SAAwBN,IAAc,OAEjD,wBAAQR,UAAWe,SAAQC,KAAK,SAASC,QAASX,EAAlD,0B,QCHEY,EAAO,oBAAgBC,mBAadzB,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,YAAmBF,MAGvBD,EAZA,SAAC,GAAD,IAAGE,EAAH,EAAGA,gBAAH,OACb,wBAAQI,UAAWoB,SAAnB,SACE,sBAAKpB,UAAWkB,EAAhB,UACE,cAAC,EAAD,IACCtB,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,YCPzByB,EANA,CACbC,KAAM,IACNC,SAAU,YACVC,SAAU,YACVC,MAAO,U,+DCmBM/B,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,YAAmBF,MAGvBD,EAlBM,SAAC,GAAD,IACRgC,EADQ,EACnBC,UACA/B,EAFmB,EAEnBA,gBACAgC,EAHmB,EAGnBA,WACGC,EAJgB,wBAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXnC,EAAkB,cAAC8B,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUjC,GAAI8B,W,+CCiBlDlC,eAJS,SAAAC,GAAK,MAAK,CAChCC,gBAAiBC,YAAmBF,MAGvBD,EAtBK,SAAC,GAAD,IACPgC,EADO,EAClBC,UACA/B,EAFkB,EAElBA,gBACAgC,EAHkB,EAGlBA,WACGC,EAJe,wBAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXnC,GAAmBiC,EAAWG,WAC5B,cAAC,IAAD,CAAUlC,GAAI8B,IAEd,cAACF,EAAD,eAAeK,W,QCTjBE,EAAWC,gBAAK,kBAAM,iCACtBC,EAAgBD,gBAAK,kBAAM,uDAC3BE,EAAeF,gBAAK,kBAAM,iCAC1BG,EAAYH,gBAAK,kBAAM,iCAEvBI,E,uKACJ,WACEC,KAAKR,MAAMS,gB,oBAGb,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO1C,OAAK,EAAC2C,KAAMrB,EAAOC,KAAMK,UAAWM,IAC3C,cAAC,EAAD,CACES,KAAMrB,EAAOE,SACbI,UAAWQ,EACXP,WAAYP,EAAOI,QAErB,cAAC,EAAD,CACEG,WAAYP,EAAOE,SACnBS,YAAU,EACVU,KAAMrB,EAAOG,SACbG,UAAWS,IAEb,cAAC,EAAD,CACER,WAAYP,EAAOE,SACnBS,YAAU,EACVU,KAAMrB,EAAOI,MACbE,UAAWU,gB,GA3BPX,aAoCZrB,EAAqB,CACzBmC,YAAaG,KAGAjD,cAAQ,KAAMW,EAAdX,CAAkC4C,GC7CjDM,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,IAAD,CAAUhE,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaiE,QAAS,KAAMtD,UAAWX,EAAMW,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRuD,SAASC,eAAe,U,mBCrB1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,mBCA5DD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,KAAO,yB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAkB,kC,kVCCvDC,EAAsBC,YAAa,+BACnCC,EAAsBD,YAAa,+BACnCE,EAAoBF,YAAa,6BAEjCG,EAAoBH,YAAa,6BACjCI,EAAoBJ,YAAa,6BACjCK,EAAkBL,YAAa,2BAE/BM,EAAuBN,YAClC,gCAEWO,EAAuBP,YAClC,gCAEWQ,EAAqBR,YAAa,8BAElCS,EAAiBT,YAAa,4BC+B5BU,EALI,CACjBC,WAvBiB,SAACC,EAAMC,GAAP,OAAkB,SAAAC,GACnC,IAAMC,EAAU,CACdH,OACAC,UAGFC,EAASX,KAETa,IACGC,KAAK,YAAaF,GAClBG,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASV,EAAkBe,OAC9CC,OAAM,SAAAC,GAAK,OAAIP,EAAST,EAAgBgB,EAAMC,eAajDC,cAVoB,SAAAC,GAAE,OAAI,SAAAV,GAC1BA,EAASR,KACTU,IACGS,OADH,oBACuBD,IACpBN,MAAK,kBAAMJ,EAASP,EAAqBiB,OACzCJ,OAAM,SAAAC,GAAK,OAAIP,EAASN,EAAmBa,EAAMC,eAMpDI,cAlCoB,kBAAM,SAAAZ,GAC1BA,EAASf,KAETiB,IACGW,IAAI,aACJT,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcL,EAASb,EAAoBkB,OAChDC,OAAM,SAAAC,GAAK,OAAIP,EAASZ,EAAkBmB,EAAMC,gB,QCjBxCM,EAAY,SAAArF,GAAK,OAAIA,EAAMR,UAAU8F,QACrCC,EAAc,SAAAvF,GAAK,OAAIA,EAAMR,UAAUoC,UACvC4D,EAAa,SAAAxF,GAAK,OAAIA,EAAMR,UAAU2D,SACtCsC,EAAW,SAAAzF,GAAK,OAAIA,EAAMR,UAAUsF,OACpCY,EAAsBC,YACjC,CAACN,EAAWE,IACZ,SAACD,EAAQ1D,GACP,IAAMgE,EAAkBN,EAAOO,cAC/B,OAAOjE,EAAS0D,QAAO,YACrB,OADmC,EAAXjB,KACZwB,cAAcC,SAASF,S,sBCKnChE,EAAWmE,YAAc,IAAD,mBAC3BrC,GAAsB,SAACsC,EAAD,YAAMC,WADD,cAE3BpC,GAAoB,SAAC7D,EAAD,YAAUiG,SAAV,mBAAqCjG,OAF9B,cAG3BgE,GAAuB,SAAChE,EAAD,OAAUiG,EAAV,EAAUA,QAAV,OACtBjG,EAAMsF,QAAO,SAAAd,GAAO,OAAIA,EAAQS,KAAOgB,QAJb,IAOxBX,EAASS,YAAc,GAAD,eACzB7B,GAAiB,SAAC8B,EAAD,YAAMC,YAGpB9C,EAAU4C,aAAc,GAAD,mBAC1BvC,GAAsB,kBAAM,KADF,cAE1BE,GAAsB,kBAAM,KAFF,cAG1BC,GAAoB,kBAAM,KAHA,cAI1BC,GAAoB,kBAAM,KAJA,cAK1BC,GAAoB,kBAAM,KALA,cAM1BC,GAAkB,kBAAM,KANE,cAO1BC,GAAuB,kBAAM,KAPH,cAQ1BC,GAAuB,kBAAM,KARH,cAS1BC,GAAqB,kBAAM,KATD,IAYvBa,EAAQiB,YAAc,MAAD,mBACxBpC,GAAoB,SAACqC,EAAD,YAAMC,WADF,cAExBnC,GAAkB,SAACkC,EAAD,YAAMC,WAFA,cAGxBhC,GAAqB,SAAC+B,EAAD,YAAMC,WAHH,IAMZC,cAAgB,CAC7BtE,WACA0D,SACAnC,UACA2B,W,sGC9CWqB,EAAU,WACrB,OACE,cAAC,IAAD,CACE9F,UAAW+F,UACX/E,KAAK,OACLgF,MAAM,UACNC,OAAQ,GACRpF,MAAO,Q,mBCTboC,EAAOC,QAAU,CAAC,QAAU,2B,gSCCfgD,EAAkB9C,YAAa,wBAC/B+C,EAAkB/C,YAAa,wBAC/BgD,EAAgBhD,YAAa,sBAE7BiD,EAAejD,YAAa,qBAC5BkD,EAAelD,YAAa,qBAC5BmD,EAAanD,YAAa,mBAE1BoD,EAAgBpD,YAAa,sBAC7BqD,EAAgBrD,YAAa,sBAC7BsD,EAActD,YAAa,oBAE3BuD,EAAwBvD,YAAa,8BACrCwD,EAAwBxD,YAAa,8BACrCyD,EAAsBzD,YAAa,4B,cCH1C0D,EAAmB,CAAE9C,KAAM,KAAMxD,MAAO,MAExCM,EAAO4E,YAAcoB,GAAD,mBACvBX,GAAkB,SAACR,EAAD,YAAMC,QAAsB9E,QADvB,cAEvBwF,GAAe,SAACX,EAAD,YAAMC,QAAsB9E,QAFpB,cAGvB2F,GAAgB,kBAAMK,KAHC,cAIvBF,GAAwB,SAACjB,EAAD,YAAMC,WAJP,IAOpBmB,EAAQrB,YAAc,MAAD,mBACxBS,GAAkB,SAACR,EAAD,YAAMC,QAAsBmB,SADtB,cAExBT,GAAe,SAACX,EAAD,YAAMC,QAAsBmB,SAFnB,cAGxBN,GAAgB,kBAAM,QAHE,IAMrBO,EAAW,SAACrB,EAAGC,GAAJ,OAAgBA,GAE3BnB,EAAQiB,YAAc,MAAD,mBACxBU,EAAgBY,GADQ,cAExBT,EAAaS,GAFW,cAGxBN,EAAcM,GAHU,cAIxBH,EAAsBG,GAJE,IAOrBC,EAAWvB,aAAc,GAAD,mBAC3BS,GAAkB,kBAAM,KADG,cAE3BG,GAAe,kBAAM,KAFM,cAG3BM,GAAwB,kBAAM,KAHH,cAI3BR,GAAgB,kBAAM,KAJK,cAK3BG,GAAa,kBAAM,KALQ,cAM3BM,GAAsB,kBAAM,KAND,cAO3BJ,GAAgB,kBAAM,KAPK,IAUfZ,cAAgB,CAC7BoB,WACAnG,OACAiG,QACAtC,U,0CCnCIsC,EAAQ,SACRA,GACF3C,IAAM8C,SAASC,QAAQC,OAAOC,cAA9B,iBAAwDN,IAFtDA,EAAQ,WAKV3C,IAAM8C,SAASC,QAAQC,OAAOC,cAAgB,IAIlDjD,IAAM8C,SAASI,QAAU,wCAElB,IAAM9F,EAAW,SAAA+F,GAAO,8CAAI,WAAMrD,GAAN,eAAAsD,EAAA,6DACjCtD,EAASgC,KADwB,kBAIR9B,IAAMC,KAAK,gBAAiBkD,GAJpB,OAIzBE,EAJyB,OAK/BV,EAAUU,EAASlD,KAAKwC,OACxB7C,EAASiC,EAAgBsB,EAASlD,OANH,gDAQ/BL,EAASkC,EAAc,KAAM1B,UARE,yDAAJ,uDAYlBgD,EAAQ,SAAAH,GAAO,8CAAI,WAAMrD,GAAN,eAAAsD,EAAA,6DAC9BtD,EAASmC,KADqB,kBAILjC,IAAMC,KAAK,eAAgBkD,GAJtB,OAItBE,EAJsB,OAM5BV,EAAUU,EAASlD,KAAKwC,OACxB7C,EAASoC,EAAamB,EAASlD,OAPH,gDAS5BL,EAASqC,EAAW,KAAM7B,UATE,yDAAJ,uDAafnE,EAAS,yDAAM,WAAM2D,GAAN,SAAAsD,EAAA,6DAC1BtD,EAASsC,KADiB,kBAIlBpC,IAAMC,KAAK,iBAJO,OAKxB0C,IACA7C,EAASuC,KANe,gDAQxBvC,EAASwC,EAAY,KAAMhC,UARH,yDAAN,uDAYT/B,EAAiB,yDAAM,WAAOuB,EAAUyD,GAAjB,mBAAAH,EAAA,2DAG9BG,IADaC,EAFiB,EAEhC5I,KAAQ+H,MAFwB,wDAOlCA,EAAUa,GACV1D,EAASyC,KARyB,kBAWTvC,IAAMW,IAAI,kBAXD,OAW1B0C,EAX0B,OAahCvD,EAAS0C,EAAsBa,EAASlD,OAbR,kDAehCL,EAAS2C,EAAoB,KAAMnC,UAfH,0DAAN,yDChEjB7E,EAAqB,SAAAF,GAAK,OAAIA,EAAMX,KAAKiI,UACzCxG,EAAe,SAAAd,GAAK,OAAIA,EAAMX,KAAK8B,KAAKN,Q","file":"static/js/main.4905dd72.chunk.js","sourcesContent":["import { phonebookReducer } from './phonebook';\r\nimport { authReducer } from './auth';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phonebook: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storeObj = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default storeObj;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { link, activeLink } from './Navigation.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/\" exact className={link} activeClassName={activeLink}>\r\n      Главная\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={link}\r\n        activeClassName={activeLink}\r\n      >\r\n        Контакты\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToPrips = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToPrips)(Navigation);\r\n","import { NavLink } from 'react-router-dom';\r\nimport { link, activeLink } from './AuthNav.module.scss';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact className={link} activeClassName={activeLink}>\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact className={link} activeClassName={activeLink}>\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import { connect } from 'react-redux';\r\nimport { getUserEmail, logOut } from '../../redux/auth';\r\n\r\nimport { button, user } from './UserMenu.module.scss';\r\n\r\nconst UserMenu = ({ avatar, email, onLogout }) => (\r\n  <div>\r\n    <img src={avatar} alt=\"\" width=\"32\" />\r\n    <span>\r\n      Welcome, <span className={user}>{email}</span>{' '}\r\n    </span>\r\n    <button className={button} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  email: getUserEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import Navigation from '../Navigation';\r\nimport AuthNav from '../AuthNav';\r\nimport UserMenu from '../UserMenu';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth';\r\n\r\nimport { header, headerContainer } from './AppBar.module.scss';\r\n\r\nconst classes = `container ${headerContainer}`;\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={header}>\r\n    <div className={classes}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </div>\r\n  </header>\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","const routes = {\r\n  home: '/',\r\n  contacts: '/contacts',\r\n  register: '/register',\r\n  login: '/login',\r\n};\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport routes from './routes';\r\n\r\nimport { getCurrentUser } from './redux/auth';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { Spinner } from './components/Loader';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView/HomeView'));\r\nconst ContactsViews = lazy(() => import('./views/ContactsViews/ContactsViews'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.refreshUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <AppBar />\r\n        <Suspense fallback={<Spinner />}>\r\n          <Switch>\r\n            <Route exact path={routes.home} component={HomeView} />\r\n            <PrivateRoute\r\n              path={routes.contacts}\r\n              component={ContactsViews}\r\n              redirectTo={routes.login}\r\n            />\r\n            <PublicRoute\r\n              redirectTo={routes.contacts}\r\n              restricted\r\n              path={routes.register}\r\n              component={RegisterView}\r\n            />\r\n            <PublicRoute\r\n              redirectTo={routes.contacts}\r\n              restricted\r\n              path={routes.login}\r\n              component={LoginView}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  refreshUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nimport 'modern-normalize';\r\nimport './styles.scss';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__26ia5\",\"activeLink\":\"Navigation_activeLink__2NnFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__32Ej8\",\"activeLink\":\"AuthNav_activeLink__LCCkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"UserMenu_button__jKnXN\",\"user\":\"UserMenu_user__pgf-N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3PD_y\",\"headerContainer\":\"AppBar_headerContainer__1obLr\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contact/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const contact_filter = createAction('phonebook/contact_filter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst operations = {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\nexport default operations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getLoading = state => state.phonebook.loading;\r\nexport const getError = state => state.phonebook.error;\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) => {\r\n      return name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  },\r\n);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  contact_filter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contact_filter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import Loader from 'react-loader-spinner';\r\nimport { spinner } from './Spinner.module.scss';\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <Loader\r\n      className={spinner}\r\n      type=\"Bars\"\r\n      color=\"#00BFFF\"\r\n      height={50}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__bFkOc\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst serError = (_, payload) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: serError,\r\n  [loginError]: serError,\r\n  [logoutError]: serError,\r\n  [getCurrentUserError]: serError,\r\n});\r\n\r\nconst isLoadIn = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  isLoadIn,\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const register = userObj => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', userObj);\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const logIn = userObj => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', userObj);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logOut = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: userToken },\r\n  } = getState();\r\n  if (!userToken) {\r\n    return;\r\n  }\r\n  token.set(userToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","export const getIsAuthenticated = state => state.auth.isLoadIn;\r\nexport const getUserEmail = state => state.auth.user.email;\r\n"],"sourceRoot":""}